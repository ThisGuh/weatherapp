{"version":3,"sources":["App.js","index.js"],"names":["App","state","weather","temperature","date","time","icon","fetch","then","res","json","data","setState","list","description","main","temp","dt_txt","map","item","slice","Number","className","this","src","alt","Math","floor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yOAgFeA,G,iNA5EbC,MAAQ,CACNC,QAAS,GACTC,YAAa,GACbC,KAAM,GACNC,KAAM,GACNC,KAAM,I,mFAEa,IAAD,OAClBC,MAAM,iHACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAC1BV,QAAS,CAACS,EAAKE,KAAK,GAAGX,QAAQ,GAAGY,YAAaH,EAAKE,KAAK,GAAGX,QAAQ,GAAGY,YAAaH,EAAKE,KAAK,GAAGX,QAAQ,GAAGY,YAAaH,EAAKE,KAAK,GAAGX,QAAQ,GAAGY,YAAaH,EAAKE,KAAK,GAAGX,QAAQ,GAAGY,aACtLX,YAAa,CAACQ,EAAKE,KAAK,GAAGE,KAAKC,KAAML,EAAKE,KAAK,GAAGE,KAAKC,KAAML,EAAKE,KAAK,GAAGE,KAAKC,KAAML,EAAKE,KAAK,GAAGE,KAAKC,KAAML,EAAKE,KAAK,GAAGE,KAAKC,MAChIZ,KAAM,CAACO,EAAKE,KAAK,GAAGI,OAAQN,EAAKE,KAAK,GAAGI,OAAQN,EAAKE,KAAK,GAAGI,OAAQN,EAAKE,KAAK,GAAGI,OAAQN,EAAKE,KAAK,GAAGI,QAAQC,KAAI,SAAAC,GAClH,OAAOA,EAAKC,MAAM,EAAG,OAEvBf,KAAM,CAACM,EAAKE,KAAK,GAAGI,OAAQN,EAAKE,KAAK,GAAGI,OAAQN,EAAKE,KAAK,GAAGI,OAAQN,EAAKE,KAAK,GAAGI,OAAQN,EAAKE,KAAK,GAAGI,QAAQC,KAAI,SAAAC,GAClH,OAAOE,OAAOF,EAAKC,MAAM,GAAI,KAAO,KAEtCd,KAAM,CAACK,EAAKE,KAAK,GAAGX,QAAQ,GAAGI,KAAMK,EAAKE,KAAK,GAAGX,QAAQ,GAAGI,KAAMK,EAAKE,KAAK,GAAGX,QAAQ,GAAGI,KAAMK,EAAKE,KAAK,GAAGX,QAAQ,GAAGI,KAAMK,EAAKE,KAAK,GAAGX,QAAQ,GAAGI,a,+BAQ3J,OACE,yBAAKgB,UAAU,OACb,gCACE,2CACA,uCAEF,8BACE,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,OAAOC,KAAKtB,MAAMG,KAAK,IACpC,uBAAGkB,UAAU,QAAQC,KAAKtB,MAAMI,KAAK,GAAK,GAArB,WAA8BkB,KAAKtB,MAAMI,KAAK,IAAOkB,KAAKtB,MAAMI,KAAK,GAA1F,OACA,uBAAGiB,UAAU,eAAeC,KAAKtB,MAAMC,QAAQ,IAC/C,yBAAKsB,IAAG,2CAAsCD,KAAKtB,MAAMK,KAAK,GAAtD,WAAmEmB,IAAKF,KAAKtB,MAAMC,QAAQ,KACnG,uBAAGoB,UAAU,eAAeI,KAAKC,MAAMJ,KAAKtB,MAAME,YAAY,IAAI,uCAEpE,yBAAKmB,UAAU,oBACb,uBAAGA,UAAU,OAAOC,KAAKtB,MAAMG,KAAK,IACpC,uBAAGkB,UAAU,QAAQC,KAAKtB,MAAMI,KAAK,GAAK,GAArB,WAA8BkB,KAAKtB,MAAMI,KAAK,IAAOkB,KAAKtB,MAAMI,KAAK,GAA1F,OACA,uBAAGiB,UAAU,eAAeC,KAAKtB,MAAMC,QAAQ,IAC/C,yBAAKsB,IAAG,2CAAsCD,KAAKtB,MAAMK,KAAK,GAAtD,WAAmEmB,IAAKF,KAAKtB,MAAMC,QAAQ,KACnG,uBAAGoB,UAAU,eAAeI,KAAKC,MAAMJ,KAAKtB,MAAME,YAAY,IAAI,uCAEpE,yBAAKmB,UAAU,oBACb,uBAAGA,UAAU,OAAOC,KAAKtB,MAAMG,KAAK,IACpC,uBAAGkB,UAAU,QAAQC,KAAKtB,MAAMI,KAAK,GAAK,GAArB,WAA8BkB,KAAKtB,MAAMI,KAAK,IAAOkB,KAAKtB,MAAMI,KAAK,GAA1F,OACA,uBAAGiB,UAAU,eAAeC,KAAKtB,MAAMC,QAAQ,IAC/C,yBAAKsB,IAAG,2CAAsCD,KAAKtB,MAAMK,KAAK,GAAtD,WAAmEmB,IAAKF,KAAKtB,MAAMC,QAAQ,KACnG,uBAAGoB,UAAU,eAAeI,KAAKC,MAAMJ,KAAKtB,MAAME,YAAY,IAAI,uCAEpE,yBAAKmB,UAAU,oBACb,uBAAGA,UAAU,OAAOC,KAAKtB,MAAMG,KAAK,IACpC,uBAAGkB,UAAU,QAAQC,KAAKtB,MAAMI,KAAK,GAAK,GAArB,WAA8BkB,KAAKtB,MAAMI,KAAK,IAAOkB,KAAKtB,MAAMI,KAAK,GAA1F,OACA,uBAAGiB,UAAU,eAAeC,KAAKtB,MAAMC,QAAQ,IAC/C,yBAAKsB,IAAG,2CAAsCD,KAAKtB,MAAMK,KAAK,GAAtD,WAAmEmB,IAAKF,KAAKtB,MAAMC,QAAQ,KACnG,uBAAGoB,UAAU,eAAeI,KAAKC,MAAMJ,KAAKtB,MAAME,YAAY,IAAI,uCAEpE,yBAAKmB,UAAU,oBACb,uBAAGA,UAAU,OAAOC,KAAKtB,MAAMG,KAAK,IACpC,uBAAGkB,UAAU,QAAQC,KAAKtB,MAAMI,KAAK,GAAK,GAArB,WAA8BkB,KAAKtB,MAAMI,KAAK,IAAOkB,KAAKtB,MAAMI,KAAK,GAA1F,OACA,uBAAGiB,UAAU,eAAeC,KAAKtB,MAAMC,QAAQ,IAC/C,yBAAKsB,IAAG,2CAAsCD,KAAKtB,MAAMK,KAAK,GAAtD,WAAmEmB,IAAKF,KAAKtB,MAAMC,QAAQ,KACnG,uBAAGoB,UAAU,eAAeI,KAAKC,MAAMJ,KAAKtB,MAAME,YAAY,IAAI,wCAGtE,qE,GAvEUyB,IAAMC,YCGxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e237f9a3.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    weather: \"\",\n    temperature: \"\",\n    date: \"\",\n    time: \"\",\n    icon: \"\"\n  }\n  componentDidMount() {\n    fetch(\"http://api.openweathermap.org/data/2.5/forecast?id=769250&appid=18596add115407bec2e7c6f7f30c6f64&units=metric\")\n      .then(res => res.json())\n      .then(data => this.setState({\n        weather: [data.list[0].weather[0].description, data.list[1].weather[0].description, data.list[2].weather[0].description, data.list[3].weather[0].description, data.list[4].weather[0].description],\n        temperature: [data.list[0].main.temp, data.list[1].main.temp, data.list[2].main.temp, data.list[3].main.temp, data.list[4].main.temp],\n        date: [data.list[0].dt_txt, data.list[1].dt_txt, data.list[2].dt_txt, data.list[3].dt_txt, data.list[4].dt_txt].map(item => {\n          return item.slice(0, 10) //yy-mm-dd\n        }),\n        time: [data.list[0].dt_txt, data.list[1].dt_txt, data.list[2].dt_txt, data.list[3].dt_txt, data.list[4].dt_txt].map(item => {\n          return Number(item.slice(11, 13)) + 1; //only hours in UTC+1\n        }),\n        icon: [data.list[0].weather[0].icon, data.list[1].weather[0].icon, data.list[2].weather[0].icon, data.list[3].weather[0].icon, data.list[4].weather[0].icon]\n      }),\n\n      )\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Weather App</h1>\n          <h3>Kielce</h3>\n        </header>\n        <main>\n          <div className=\"weatherContainer\">\n            <p className=\"day\">{this.state.date[0]}</p>\n            <p className=\"time\">{this.state.time[0] < 10 ? `0${this.state.time[0]}` : this.state.time[0]}:00</p>\n            <p className=\"weatherDesc\">{this.state.weather[0]}</p>\n            <img src={`http://openweathermap.org/img/wn/${this.state.icon[0]}@2x.png`} alt={this.state.weather[0]} />\n            <p className=\"temperature\">{Math.floor(this.state.temperature[0])}<sup>°</sup></p>\n          </div>\n          <div className=\"weatherContainer\">\n            <p className=\"day\">{this.state.date[1]}</p>\n            <p className=\"time\">{this.state.time[1] < 10 ? `0${this.state.time[1]}` : this.state.time[1]}:00</p>\n            <p className=\"weatherDesc\">{this.state.weather[1]}</p>\n            <img src={`http://openweathermap.org/img/wn/${this.state.icon[1]}@2x.png`} alt={this.state.weather[1]} />\n            <p className=\"temperature\">{Math.floor(this.state.temperature[1])}<sup>°</sup></p>\n          </div>\n          <div className=\"weatherContainer\">\n            <p className=\"day\">{this.state.date[2]}</p>\n            <p className=\"time\">{this.state.time[2] < 10 ? `0${this.state.time[2]}` : this.state.time[2]}:00</p>\n            <p className=\"weatherDesc\">{this.state.weather[2]}</p>\n            <img src={`http://openweathermap.org/img/wn/${this.state.icon[2]}@2x.png`} alt={this.state.weather[2]} />\n            <p className=\"temperature\">{Math.floor(this.state.temperature[2])}<sup>°</sup></p>\n          </div>\n          <div className=\"weatherContainer\">\n            <p className=\"day\">{this.state.date[3]}</p>\n            <p className=\"time\">{this.state.time[3] < 10 ? `0${this.state.time[3]}` : this.state.time[3]}:00</p>\n            <p className=\"weatherDesc\">{this.state.weather[3]}</p>\n            <img src={`http://openweathermap.org/img/wn/${this.state.icon[3]}@2x.png`} alt={this.state.weather[3]} />\n            <p className=\"temperature\">{Math.floor(this.state.temperature[3])}<sup>°</sup></p>\n          </div>\n          <div className=\"weatherContainer\">\n            <p className=\"day\">{this.state.date[4]}</p>\n            <p className=\"time\">{this.state.time[4] < 10 ? `0${this.state.time[4]}` : this.state.time[4]}:00</p>\n            <p className=\"weatherDesc\">{this.state.weather[4]}</p>\n            <img src={`http://openweathermap.org/img/wn/${this.state.icon[4]}@2x.png`} alt={this.state.weather[4]} />\n            <p className=\"temperature\">{Math.floor(this.state.temperature[4])}<sup>°</sup></p>\n          </div>\n        </main>\n        <footer>Created by Damian Głuch</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}